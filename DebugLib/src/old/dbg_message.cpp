#include "dbg_common.h"

#ifdef _DEBUG

extern NAME_VALUE_PAIR<UINT> msgtable[];

const wchar *debugGetMessageName(UINT msg)
{
	const wchar *ret;
	static wchar buf[64];
	ret=value_to_name(msg,L"",msgtable);
	if(*ret==L'\0'){
		swprintf(buf,L"UNDEFINED_MESSAGE(%d)",msg);
		ret=buf;
	}
	return ret;
}

static NAME_VALUE_PAIR<UINT> msgtable[]={
L"WM_NULL",	WM_NULL,
L"WM_CREATE",	WM_CREATE,
L"WM_DESTROY",	WM_DESTROY,
L"WM_MOVE",	WM_MOVE,
L"WM_SIZE",	WM_SIZE,
L"WM_ACTIVATE",	WM_ACTIVATE,
L"WA_INACTIVE",	WA_INACTIVE,
L"WA_ACTIVE",	WA_ACTIVE,
L"WA_CLICKACTIVE",	WA_CLICKACTIVE,
L"WM_SETFOCUS",	WM_SETFOCUS,
L"WM_KILLFOCUS",	WM_KILLFOCUS,
L"WM_ENABLE",	WM_ENABLE,
L"WM_SETREDRAW",	WM_SETREDRAW,
L"WM_SETTEXT",	WM_SETTEXT,
L"WM_GETTEXT",	WM_GETTEXT,
L"WM_GETTEXTLENGTH",	WM_GETTEXTLENGTH,
L"WM_PAINT",	WM_PAINT,
L"WM_CLOSE",	WM_CLOSE,
L"WM_QUERYENDSESSION",	WM_QUERYENDSESSION,
L"WM_QUIT",	WM_QUIT,
L"WM_QUERYOPEN",	WM_QUERYOPEN,
L"WM_ERASEBKGND",	WM_ERASEBKGND,
L"WM_SYSCOLORCHANGE",	WM_SYSCOLORCHANGE,
L"WM_ENDSESSION",	WM_ENDSESSION,
L"WM_SHOWWINDOW",	WM_SHOWWINDOW,
L"WM_WININICHANGE",	WM_WININICHANGE,
#if(WINVER >= 0x0400)
//WM_SETTINGCHANGE = WM_WININICHANGE,
#endif // WINVER >= 0x0400,
L"WM_DEVMODECHANGE",	WM_DEVMODECHANGE,
L"WM_ACTIVATEAPP",	WM_ACTIVATEAPP,
L"WM_FONTCHANGE",	WM_FONTCHANGE,
L"WM_TIMECHANGE",	WM_TIMECHANGE,
L"WM_CANCELMODE",	WM_CANCELMODE,
L"WM_SETCURSOR",	WM_SETCURSOR,
L"WM_MOUSEACTIVATE",	WM_MOUSEACTIVATE,
L"WM_CHILDACTIVATE",	WM_CHILDACTIVATE,
L"WM_QUEUESYNC",	WM_QUEUESYNC,
L"WM_GETMINMAXINFO",	WM_GETMINMAXINFO,
L"WM_PAINTICON",	WM_PAINTICON,
L"WM_ICONERASEBKGND",	WM_ICONERASEBKGND,
L"WM_NEXTDLGCTL",	WM_NEXTDLGCTL,
L"WM_SPOOLERSTATUS",	WM_SPOOLERSTATUS,
L"WM_DRAWITEM",	WM_DRAWITEM,
L"WM_MEASUREITEM",	WM_MEASUREITEM,
L"WM_DELETEITEM",	WM_DELETEITEM,
L"WM_VKEYTOITEM",	WM_VKEYTOITEM,
L"WM_CHARTOITEM",	WM_CHARTOITEM,
L"WM_SETFONT",	WM_SETFONT,
L"WM_GETFONT",	WM_GETFONT,
L"WM_SETHOTKEY",	WM_SETHOTKEY,
L"WM_GETHOTKEY",	WM_GETHOTKEY,
L"WM_QUERYDRAGICON",	WM_QUERYDRAGICON,
L"WM_COMPAREITEM",	WM_COMPAREITEM,
#if(WINVER >= 0x0500)
L"WM_GETOBJECT",	WM_GETOBJECT,
#endif // WINVER >= 0x0500
L"WM_COMPACTING",	WM_COMPACTING,
L"WM_COMMNOTIFY",	WM_COMMNOTIFY,
L"WM_WINDOWPOSCHANGING",	WM_WINDOWPOSCHANGING,
L"WM_WINDOWPOSCHANGED",	WM_WINDOWPOSCHANGED,
L"WM_POWER",	WM_POWER,
L"WM_COPYDATA",	WM_COPYDATA,
L"WM_CANCELJOURNAL",	WM_CANCELJOURNAL,
#if(WINVER >= 0x0400)
L"WM_NOTIFY",	WM_NOTIFY,
L"WM_INPUTLANGCHANGEREQUEST",	WM_INPUTLANGCHANGEREQUEST,
L"WM_INPUTLANGCHANGE",	WM_INPUTLANGCHANGE,
L"WM_TCARD",	WM_TCARD,
L"WM_HELP",	WM_HELP,
L"WM_USERCHANGED",	WM_USERCHANGED,
L"WM_NOTIFYFORMAT",	WM_NOTIFYFORMAT,
L"WM_CONTEXTMENU",	WM_CONTEXTMENU,
L"WM_STYLECHANGING",	WM_STYLECHANGING,
L"WM_STYLECHANGED",	WM_STYLECHANGED,
L"WM_DISPLAYCHANGE",	WM_DISPLAYCHANGE,
L"WM_GETICON",	WM_GETICON,
L"WM_SETICON",	WM_SETICON,
#endif // WINVER >= 0x0400
L"WM_NCCREATE",	WM_NCCREATE,
L"WM_NCDESTROY",	WM_NCDESTROY,
L"WM_NCCALCSIZE",	WM_NCCALCSIZE,
L"WM_NCHITTEST",	WM_NCHITTEST,
L"WM_NCPAINT",	WM_NCPAINT,
L"WM_NCACTIVATE",	WM_NCACTIVATE,
L"WM_GETDLGCODE",	WM_GETDLGCODE,
L"WM_SYNCPAINT",	WM_SYNCPAINT,
L"WM_NCMOUSEMOVE",	WM_NCMOUSEMOVE,
L"WM_NCLBUTTONDOWN",	WM_NCLBUTTONDOWN,
L"WM_NCLBUTTONUP",	WM_NCLBUTTONUP,
L"WM_NCLBUTTONDBLCLK",	WM_NCLBUTTONDBLCLK,
L"WM_NCRBUTTONDOWN",	WM_NCRBUTTONDOWN,
L"WM_NCRBUTTONUP",	WM_NCRBUTTONUP,
L"WM_NCRBUTTONDBLCLK",	WM_NCRBUTTONDBLCLK,
L"WM_NCMBUTTONDOWN",	WM_NCMBUTTONDOWN,
L"WM_NCMBUTTONUP",	WM_NCMBUTTONUP,
L"WM_NCMBUTTONDBLCLK",	WM_NCMBUTTONDBLCLK,
L"WM_KEYDOWN",	WM_KEYDOWN,
L"WM_KEYFIRST",	WM_KEYFIRST,	//WM_KEYDOWN‚Æ“¯‚¶’l
L"WM_KEYUP",	WM_KEYUP,
L"WM_CHAR",	WM_CHAR,
L"WM_DEADCHAR",	WM_DEADCHAR,
L"WM_SYSKEYDOWN",	WM_SYSKEYDOWN,
L"WM_SYSKEYUP",	WM_SYSKEYUP,
L"WM_SYSCHAR",	WM_SYSCHAR,
L"WM_SYSDEADCHAR",	WM_SYSDEADCHAR,
L"WM_KEYLAST",	WM_KEYLAST,
#if(WINVER >= 0x0400)
L"WM_IME_STARTCOMPOSITION",	WM_IME_STARTCOMPOSITION,
L"WM_IME_ENDCOMPOSITION",	WM_IME_ENDCOMPOSITION,
L"WM_IME_COMPOSITION",	WM_IME_COMPOSITION,
L"WM_IME_KEYLAST",	WM_IME_KEYLAST,
#endif // WINVER >= 0x0400
L"WM_INITDIALOG",	WM_INITDIALOG,
L"WM_COMMAND",	WM_COMMAND,
L"WM_SYSCOMMAND",	WM_SYSCOMMAND,
L"WM_TIMER",	WM_TIMER,
L"WM_HSCROLL",	WM_HSCROLL,
L"WM_VSCROLL",	WM_VSCROLL,
L"WM_INITMENU",	WM_INITMENU,
L"WM_INITMENUPOPUP",	WM_INITMENUPOPUP,
L"WM_MENUSELECT",	WM_MENUSELECT,
L"WM_MENUCHAR",	WM_MENUCHAR,
L"WM_ENTERIDLE",	WM_ENTERIDLE,
#if(WINVER >= 0x0500)
L"WM_MENURBUTTONUP",	WM_MENURBUTTONUP,
L"WM_MENUDRAG",	WM_MENUDRAG,
L"WM_MENUGETOBJECT",	WM_MENUGETOBJECT,
L"WM_UNINITMENUPOPUP",	WM_UNINITMENUPOPUP,
L"WM_MENUCOMMAND",	WM_MENUCOMMAND,
#endif // WINVER >= 0x0500
L"WM_CTLCOLORMSGBOX",	WM_CTLCOLORMSGBOX,
L"WM_CTLCOLOREDIT",	WM_CTLCOLOREDIT,
L"WM_CTLCOLORLISTBOX",	WM_CTLCOLORLISTBOX,
L"WM_CTLCOLORBTN",	WM_CTLCOLORBTN,
L"WM_CTLCOLORDLG",	WM_CTLCOLORDLG,
L"WM_CTLCOLORSCROLLBAR",	WM_CTLCOLORSCROLLBAR,
L"WM_CTLCOLORSTATIC",	WM_CTLCOLORSTATIC,
L"WM_MOUSEFIRST",	WM_MOUSEFIRST,
L"WM_MOUSEMOVE",	WM_MOUSEMOVE,
L"WM_LBUTTONDOWN",	WM_LBUTTONDOWN,
L"WM_LBUTTONUP",	WM_LBUTTONUP,
L"WM_LBUTTONDBLCLK",	WM_LBUTTONDBLCLK,
L"WM_RBUTTONDOWN",	WM_RBUTTONDOWN,
L"WM_RBUTTONUP",	WM_RBUTTONUP,
L"WM_RBUTTONDBLCLK",	WM_RBUTTONDBLCLK,
L"WM_MBUTTONDOWN",	WM_MBUTTONDOWN,
L"WM_MBUTTONUP",	WM_MBUTTONUP,
L"WM_MBUTTONDBLCLK",	WM_MBUTTONDBLCLK,
#if (_WIN32_WINNT >= 0x0400) || (_WIN32_WINDOWS > 0x0400)
L"WM_MOUSEWHEEL",	WM_MOUSEWHEEL,
L"WM_MOUSELAST",	WM_MOUSELAST,
#else,
L"WM_MOUSELAST",	WM_MOUSELAST,
#endif // if (_WIN32_WINNT < 0x0400) ,
L"WM_PARENTNOTIFY",	WM_PARENTNOTIFY,
L"WM_ENTERMENULOOP",	WM_ENTERMENULOOP,
L"WM_EXITMENULOOP",	WM_EXITMENULOOP,
#if(WINVER >= 0x0400)
L"WM_NEXTMENU",	WM_NEXTMENU,
L"WM_SIZING",	WM_SIZING,
L"WM_CAPTURECHANGED",	WM_CAPTURECHANGED,
L"WM_MOVING",	WM_MOVING,
L"WM_POWERBROADCAST",	WM_POWERBROADCAST,
L"WM_DEVICECHANGE",	WM_DEVICECHANGE,
#endif // WINVER >= 0x0400
L"WM_MDICREATE",	WM_MDICREATE,
L"WM_MDIDESTROY",	WM_MDIDESTROY,
L"WM_MDIACTIVATE",	WM_MDIACTIVATE,
L"WM_MDIRESTORE",	WM_MDIRESTORE,
L"WM_MDINEXT",	WM_MDINEXT,
L"WM_MDIMAXIMIZE",	WM_MDIMAXIMIZE,
L"WM_MDITILE",	WM_MDITILE,
L"WM_MDICASCADE",	WM_MDICASCADE,
L"WM_MDIICONARRANGE",	WM_MDIICONARRANGE,
L"WM_MDIGETACTIVE",	WM_MDIGETACTIVE,
L"WM_MDISETMENU",	WM_MDISETMENU,
L"WM_ENTERSIZEMOVE",	WM_ENTERSIZEMOVE,
L"WM_EXITSIZEMOVE",	WM_EXITSIZEMOVE,
L"WM_DROPFILES",	WM_DROPFILES,
L"WM_MDIREFRESHMENU",	WM_MDIREFRESHMENU,
#if(WINVER >= 0x0400)
L"WM_IME_SETCONTEXT",	WM_IME_SETCONTEXT,
L"WM_IME_NOTIFY",	WM_IME_NOTIFY,
L"WM_IME_CONTROL",	WM_IME_CONTROL,
L"WM_IME_COMPOSITIONFULL",	WM_IME_COMPOSITIONFULL,
L"WM_IME_SELECT",	WM_IME_SELECT,
L"WM_IME_CHAR",	WM_IME_CHAR,
#endif // WINVER >= 0x0400
#if(WINVER >= 0x0500)
L"WM_IME_REQUEST",	WM_IME_REQUEST,
#endif // WINVER >= 0x0500
#if(WINVER >= 0x0400)
L"WM_IME_KEYDOWN",	WM_IME_KEYDOWN,
L"WM_IME_KEYUP",	WM_IME_KEYUP,
#endif // WINVER >= 0x0400
#if(_WIN32_WINNT >= 0x0400)
L"WM_MOUSEHOVER",	WM_MOUSEHOVER,
L"WM_MOUSELEAVE",	WM_MOUSELEAVE,
#endif // _WIN32_WINNT >= 0x0400
L"WM_CUT",	WM_CUT,
L"WM_COPY",	WM_COPY,
L"WM_PASTE",	WM_PASTE,
L"WM_CLEAR",	WM_CLEAR,
L"WM_UNDO",	WM_UNDO,
L"WM_RENDERFORMAT",	WM_RENDERFORMAT,
L"WM_RENDERALLFORMATS",	WM_RENDERALLFORMATS,
L"WM_DESTROYCLIPBOARD",	WM_DESTROYCLIPBOARD,
L"WM_DRAWCLIPBOARD",	WM_DRAWCLIPBOARD,
L"WM_PAINTCLIPBOARD",	WM_PAINTCLIPBOARD,
L"WM_VSCROLLCLIPBOARD",	WM_VSCROLLCLIPBOARD,
L"WM_SIZECLIPBOARD",	WM_SIZECLIPBOARD,
L"WM_ASKCBFORMATNAME",	WM_ASKCBFORMATNAME,
L"WM_CHANGECBCHAIN",	WM_CHANGECBCHAIN,
L"WM_HSCROLLCLIPBOARD",	WM_HSCROLLCLIPBOARD,
L"WM_QUERYNEWPALETTE",	WM_QUERYNEWPALETTE,
L"WM_PALETTEISCHANGING",	WM_PALETTEISCHANGING,
L"WM_PALETTECHANGED",	WM_PALETTECHANGED,
L"WM_HOTKEY",	WM_HOTKEY,
#if(WINVER >= 0x0400)
L"WM_PRINT",	WM_PRINT,
L"WM_PRINTCLIENT",	WM_PRINTCLIENT,
L"WM_HANDHELDFIRST",	WM_HANDHELDFIRST,
L"WM_HANDHELDLAST",	WM_HANDHELDLAST,
L"WM_AFXFIRST",	WM_AFXFIRST,
L"WM_AFXLAST",	WM_AFXLAST,
#endif // WINVER >= 0x0400
L"WM_PENWINFIRST",	WM_PENWINFIRST,
L"WM_PENWINLAST",	WM_PENWINLAST,
#if(WINVER >= 0x0400)
L"WM_APP",	WM_APP,
#endif // WINVER >= 0x0400 
	NULL,		0,
};

extern NAME_VALUE_PAIR<UINT> nmtable[];

const wchar *debugGetNotifyName(UINT msg)
{
	const wchar *ret;
	static wchar buf[64];
	ret=value_to_name(msg,L"",nmtable);
	if(*ret==L'\0'){
		swprintf(buf,L"UNDEFINED_MESSAGE(%d)",msg);
		ret=buf;
	}
	return ret;
}

static NAME_VALUE_PAIR<UINT> nmtable[]={
L"NM_OUTOFMEMORY",	NM_OUTOFMEMORY,
L"NM_CLICK",	NM_CLICK,
L"NM_DBLCLK",	NM_DBLCLK,
L"NM_RETURN",	NM_RETURN,
L"NM_RCLICK",	NM_RCLICK,
L"NM_RDBLCLK",	NM_RDBLCLK,
L"NM_SETFOCUS",	NM_SETFOCUS,
L"NM_KILLFOCUS",	NM_KILLFOCUS,
L"NM_CUSTOMDRAW",	NM_CUSTOMDRAW,
L"NM_HOVER",	NM_HOVER,
L"NM_NCHITTEST",	NM_NCHITTEST,
L"NM_KEYDOWN",	NM_KEYDOWN,
L"NM_RELEASEDCAPTURE",	NM_RELEASEDCAPTURE,
L"NM_SETCURSOR",	NM_SETCURSOR,
L"NM_CHAR",	NM_CHAR,
L"NM_FIRST",	NM_FIRST,
L"NM_LAST",	NM_LAST,
//"NM_UPDOWN",	NM_UPDOWN,
//"NM_LISTVIEW",	NM_LISTVIEW,
//"NM_CACHEHINT",	NM_CACHEHINT,
//"NM_FINDITEM",	NM_FINDITEM,
//"NM_ODSTATECHANGE",	NM_ODSTATECHANGE,
//"NM_TREEVIEWW",	NM_TREEVIEWW,
//"NM_TREEVIEWA",	NM_TREEVIEWA,
//"NM_TREEVIEW",	NM_TREEVIEW,
NULL,0,
};

#endif
